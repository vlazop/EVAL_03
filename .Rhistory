ggplot(aes(Sepal.Length))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
H_SW <- datos %>%
ggplot(aes(Sepal.Width))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
H_PL <- datos %>%
ggplot(aes(Petal.Length))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
H_PW <- datos %>%
ggplot(aes(Petal.Width))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = c(0.5,-0.5))
grid.arrange(H_SL,H_SW,H_PL,H_PW, nrow=2, top = textGrob("Histograma Iris"))
H_SL <- datos %>%
ggplot(aes(Sepal.Length))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
H_SW <- datos %>%
ggplot(aes(Sepal.Width))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
H_PL <- datos %>%
ggplot(aes(Petal.Length))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
H_PW <- datos %>%
ggplot(aes(Petal.Width))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
grid.arrange(H_SL,H_SW,H_PL,H_PW, nrow=2, top = textGrob("Histograma Iris"))
B_SL <- datos %>%
ggplot(aes(Sepal.Length))+
# geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
geom_boxplot(width = 0.1)
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
# geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
geom_boxplot(width = 0.1)
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SL
B_SL <- datos %>%
ggplot(aes(Sepal.Length))+
# geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
geom_boxplot(width = 0.1)
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SL
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
# geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
geom_boxplot(width = 0.1)
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SL
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
# geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
geom_boxplot(width = 0.1,colour = "#3366FF")
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SL
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
geom_boxplot(width = 0.1)
# geom_boxplot(width = 0.1,colour = "#3366FF")
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SW <- datos %>%
ggplot(aes(Species, Sepal.Width))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PL <- datos %>%
ggplot(aes(Species, Petal.Length))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_histogram(aes(fill = Species), binwidth =0.2, col = "black")+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
grid.arrange(B_SL,B_SW,B_PL,B_PW, nrow=2, top = textGrob("Boxplot Iris"))
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
geom_boxplot(width = 0.1)
# geom_boxplot(width = 0.1,colour = "#3366FF")
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SW <- datos %>%
ggplot(aes(Species, Sepal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PL <- datos %>%
ggplot(aes(Species, Petal.Length))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
grid.arrange(B_SL,B_SW,B_PL,B_PW, nrow=2, top = textGrob("Boxplot Iris"))
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
geom_boxplot(width = 0.1)
# geom_boxplot(width = 0.1,colour = "#3366FF")
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SW <- datos %>%
ggplot(aes(Species, Sepal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PL <- datos %>%
ggplot(aes(Species, Petal.Length))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
grid.arrange(B_SL,B_SW,B_PL,B_PW, nrow=2, top = textGrob("Boxplot Iris"))
B_SL
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
geom_boxplot(width = 0.1)+
# geom_boxplot(width = 0.1,colour = "#3366FF")
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SW <- datos %>%
ggplot(aes(Species, Sepal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PL <- datos %>%
ggplot(aes(Species, Petal.Length))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
grid.arrange(B_SL,B_SW,B_PL,B_PW, nrow=2, top = textGrob("Boxplot Iris"))
B_PW
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
B_PW
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
B_PW
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
B_PW
library(dplyr)
library(gridExtra)
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
B_PW
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
geom_boxplot(width = 0.1)+
# geom_boxplot(width = 0.1,colour = "#3366FF")
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SW <- datos %>%
ggplot(aes(Species, Sepal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PL <- datos %>%
ggplot(aes(Species, Petal.Length))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "right")
grid.arrange(B_SL,B_SW,B_PL,B_PW, nrow=2, top = textGrob("Boxplot Iris"))
B_SL <- datos %>%
ggplot(aes(Species, Sepal.Length))+
geom_boxplot(width = 0.1)+
# geom_boxplot(width = 0.1,colour = "#3366FF")
labs(x = "Sepal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_SW <- datos %>%
ggplot(aes(Species, Sepal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Sepal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PL <- datos %>%
ggplot(aes(Species, Petal.Length))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Length (cm)", y = "Frecuencia")+
theme(legend.position = "none")
B_PW <- datos %>%
ggplot(aes(Species, Petal.Width))+
geom_boxplot(width = 0.1)+
labs(x = "Petal Width (cm)", y = "Frecuencia")+
theme(legend.position = "none")
grid.arrange(B_SL,B_SW,B_PL,B_PW, nrow=2, top = textGrob("Boxplot Iris"))
x11()
par(mfrow=c(2,2))
boxplot(datos$Sepal.Length~datos$Species,main="Sepal.Length",col=rainbow(3))
boxplot(datos$Sepal.Width~datos$Species,main="Sepal.Width",col=rainbow(3))
boxplot(datos$Petal.Length~datos$Species,main="Petal.Length",col=rainbow(3))
boxplot(datos$Petal.Width~datos$Species,main="Petal.Width",col=rainbow(3))
x11()
par(mfrow=c(2,2))
boxplot(datos$Sepal.Length~datos$Species,main="Sepal.Length",col=rainbow(3))
boxplot(datos$Sepal.Width~datos$Species,main="Sepal.Width",col=rainbow(3))
boxplot(datos$Petal.Length~datos$Species,main="Petal.Length",col=rainbow(3))
boxplot(datos$Petal.Width~datos$Species,main="Petal.Width",col=rainbow(3))
pairs(iris[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,12))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,12))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,20))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,16))
pairs(datos[,1:4],col=iris[,5])
pairs(datos[,1:4],col=iris[,5])
par(xpd=TRUE)
pairs(datos[,1:4],col=iris[,5])
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5])
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5])
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],p=c(4,4,6,10))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],p=c(4,4,6,10))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],p=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=datos[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(datos$Species)),fill=c(1,2,3))
pairs(datos[,1:4],col=datos[,5],oma=c(4,4,6,12))
pairs(datos[,1:4],col=datos[,5],oma=c(4,4,6,12))
pairs(datos[,1:4],col=datos[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(datos$Species)),fill=c(1,2,3))
pairs(iris[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
corr <- cor(iris[,1:4])
round(corr,3)
# Matriz de correlación
corr <- cor(datos[,1:4])
round(corr,3)
pairs(datos[,1:4],col=datos[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(datos$Species)),fill=c(1,2,3))
pairs(iris[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
x11()
pairs(iris[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
pairs(iris[,1:4],col=iris[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(iris$Species)),fill=c(1,2,3))
x11()
pairs(datos[,1:4],col=datos[,5],oma=c(4,4,6,12))
par(xpd=TRUE)
legend(0.85,0.6, as.vector(unique(datos$Species)),fill=c(1,2,3))
NuevaEspecie <- data.frame(
Sepal.Length = 6.5, Sepal.Width = 3.0,
Petal.Length = 5.2, Petal.Width = 2.0
)
View(NuevaEspecie)
datos <- as.data.frame(iris)
View(NuevaEspecie)
str(datos)
cor(datos[,1:4])
library(corrplot)
corrplot(cor(datos[,1:4])
corrplot(cor(datos[,1:4]))
corrplot(cor(datos[,1:4]))
library(rpart)
Prueba1 <-c(1 ,3, 9,12, 14,15,  32,  36,  45 , 59 , 66  ,94 , 95 ,130 ,146, 149 ,171, 188 ,193, 194, 209,
210 ,218 ,227, 237 ,241, 255, 277,304 ,308 ,316 ,320, 334 ,349,366 ,367 ,371 ,378, 393 ,401 ,
406 ,422, 423 ,453 ,455 ,485, 496, 505)
Prueba2 <- sample(primes::generate_primes(min=200,max = 506),size = 25)
Escenario1 <- Boston[Prueba1,-14] # dataframe de prueba 1
Escenario2 <- Boston[Prueba2,-14] # dataframe de prueba 2
Prueba2 <- sample(primes::generate_primes(min=200,max = 506),size = 25)
Escenario1 <- Boston[Prueba1,-14] # dataframe de prueba 1
Escenario2 <- Boston[Prueba2,-14] # dataframe de prueba 2
library(MASS)
data(Boston)
View(datos_boston)
datosB <- Boston
View(datosB)
Prueba1 <-c(1 ,3, 9,12, 14,15,  32,  36,  45 , 59 , 66  ,94 , 95 ,130 ,146, 149 ,171, 188 ,193, 194, 209,
210 ,218 ,227, 237 ,241, 255, 277,304 ,308 ,316 ,320, 334 ,349,366 ,367 ,371 ,378, 393 ,401 ,
406 ,422, 423 ,453 ,455 ,485, 496, 505)
Prueba2 <- sample(primes::generate_primes(min=200,max = 506),size = 25)
Escenario1 <- Boston[Prueba1,-14] # dataframe de prueba 1
Escenario2 <- Boston[Prueba2,-14] # dataframe de prueba 2
help(primes)
View(Escenario1) #48 entradas
View(datosB)
class(mod1)
mod1 <- rpart(medv ~ ., data=datos_boston) # el punto . quiere decir todas las variables independientes
mod1 <- rpart(medv ~ ., data=Boston) # el punto . quiere decir todas las variables independientes
class(mod1)
typeof(mod1)
mod_boston
View(mod1)
mod1$splits
mod1
rpart.plot(mod1)
library(rpart)
rpart.plot(mod1)
library(rpart)
install.packages(c("mnormt", "openssl"))
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(mod1)
prp(mod1)
library(rpart.plot)
rpart.plot(mod1)
prp(mod1)
rpart.plot(mod1)
prp(mod1)
dev.off()
prp(mod1)
mod1
datos_level1 <- datos_boston[datos_boston$rm<6.9,]
datos_level1 <- Boston[Boston$rm<6.9,]
View(datos_level1)
datos_level2 <- datos_level1[datos_level1$lstat>=14,]
View(datos_level2)
mean(datos_level2)
mean(datos_level2$crim)
datos_level3 <- datos_level2[datos_level2$dis>=1.6,]
datos_level4 <- datos_level3[datos_level3$rm<6.5,]
mean(datos_level4)
mean(datos_level4$crim)
datos_level1 <- Boston[Boston$rm<6.9,]
datos_level2 <- datos_level1[datos_level1$lstat>=14,]
datos_level3 <- datos_level2[datos_level2$dis>=1.6,]
datos_level4 <- datos_level3[datos_level3$rm<6.5,]
mean(datos_level4$crim)
datos_level1 <- Boston[Boston$rm<6.9,]
datos_level2 <- datos_level1[datos_level1$lstat<14,]
datos_level3 <- datos_level2[datos_level2$dis>=1.6,]
datos_level4 <- datos_level3[datos_level3$rm<6.5,]
mean(datos_level4$crim)
mean(datos_level4$medv)
predicciones_datos_1 <- predict(mod1,newdata=Escenario1)
predicciones_datos_1
View(predicciones_datos_1) # 48 filas
coefic_1 <- (sd(predicciones_datos_1)/mean(predicciones_datos_1))*100
coefic_1
plot(x = predicciones_datos_1, y = Escenario1$medv,
main = "Predicciones modelo vs valor real",
xlab = "Predicci�n",
ylab = "Valor real", col = "darkgrey", pch = 19
)
plot(x = predicciones_datos_1, y = Escenario1$medv,
main = "Modelo_Predicción vs Valor_Real",
xlab = "Predicción",
ylab = "Valor real", col = "green", pch = 19
)
coef_1 <- (sd(predicciones_datos_1)/mean(predicciones_datos_1))*100
View(mod1)
predicciones_datos_2 <- predict(mod1,newdata=Escenario2)
View(predicciones_datos_2) # 48 filas
coef_2 <- (sd(predicciones_datos_2)/mean(predicciones_datos_2))*100
coef_2
plot(x = predicciones_datos_2, y = Escenario2$medv,
main = "Modelo_Predicción vs Valor_Real",
xlab = "Predicción",
ylab = "Valor real", col = "green", pch = 19
)
coef_1
library(mlbench)
data("PimaIndiansDiabetes2")
mod_iris <- rpart(medv ~ ., data=datos)
View(Boston)
mod_iris <- rpart(Species ~ ., data=datos)
class(mod_iris)
typeof(mod_iris)
mod_iris$splits
mod_iris$splits
mod_iris
library(rpart)
predicciones_iris <- predict(mod_iris,newdata=NuevaEspecie, type="prob")
View(predicciones_iris) # 48 filas
data("PimaIndiansDiabetes2")
data_diabetes <- PimaIndiansDiabetes2
datos_diabetes_1 <- datos_diabetes[,-7]
datos_diabetes_1 <- na.omit(datos_diabetes_sp)
datos_diabetes_1 <- na.omit(datos_diabetes_1)
data_diabetes <- PimaIndiansDiabetes2
datos_diabetes_1 <- datos_diabetes[,-7]
library(mlbench)
data("PimaIndiansDiabetes2")
data_diabetes <- PimaIndiansDiabetes2
datos_diabetes_1 <- datos_diabetes[,-7]
data_diabetes <- PimaIndiansDiabetes2
library(mlbench)
data("PimaIndiansDiabetes2")
data_diabetes <- PimaIndiansDiabetes2
View(data_diabetes)
datos_diabetes_1 <- datos_diabetes[,-7]
datos_diabetes_1 <- data_diabetes[,-7]
datos_diabetes_1 <- na.omit(datos_diabetes_1)
View(datos_diabetes_sp)
mod_dia <- rpart(diabetes ~ ., data=datos_diabetes_1)
class(mod_diabetes_sp)
mod_dia <- rpart(diabetes ~ ., data=datos_diabetes_1)
class(mod_dia)
typeof(mod_dia)
mod_dia
rpart.plot(mod_dia)
prp(mod_dia)
diabetes_level1 <- datos_diabetes_sp[datos_diabetes_1$glucose>= 128,]
diabetes_level1 <- datos_diabetes_1[datos_diabetes_1$glucose>= 128,]
diabetes_level2 <- diabetes_level1[diabetes_level1$glucose < 166,]
diabetes_level3 <- diabetes_level2[diabetes_level2$age>=24,]
diabetes_level4 <- diabetes_level3[diabetes_level3$mass>=26,]
diabetes_level5 <- diabetes_level4[diabetes_level4$pregnant<8,]
diabetes_level6 <- diabetes_level5[diabetes_level5$pregnant>=4,]
diabetes_level7 <- diabetes_level6[diabetes_level6$pressure<76,]
View(diabetes_level7)
mfv(diabetes_level7$diabetes)
NuevoDiabetes <- data.frame(
pregnant = 15, glucose = 170, pressure=27, triceps= 34,
insulin= 128, mass = 38, age=25)
prediccion_diabetes <- predict(mod_dia,newdata=NuevoDiabetes,type = "prob")
prediccion_diabetes
datos_diabetes_2 <- data_diabetes[,-2]
datos_diabetes_2 <- na.omit(datos_diabetes_2)
View(datos_diabetes_2)
mod_dia <- rpart(diabetes ~ ., data=datos_diabetes_2)
class(mod_dia)
typeof(mod_dia)
mod_dia
rpart.plot(mod_dia)
prp(mod_dia)
dev.off()
rpart.plot(mod_dia)
diabetes_level1 <- datos_diabetes_2[datos_diabetes_2$insulin>=121,]
diabetes_level2 <- diabetes_level1[diabetes_level1$age > 29,]
diabetes_level3 <- diabetes_level2[diabetes_level2$pressure<77,]
diabetes_level4 <- diabetes_level3[diabetes_level3$pedigree>=0.33,]
diabetes_level5 <- diabetes_level4[diabetes_level4$pregnant<8,]
diabetes_level6 <- diabetes_level5[diabetes_level5$pregnant<8,]
diabetes_level7 <- diabetes_level6[diabetes_level6$triceps>=24,]
View(diabetes_level7)
NuevoDiabetes2 <- data.frame(
pregnant = 15, pedigree = 10, pressure=27, triceps= 34,
insulin= 128, mass = 38, age=25)
prediccion_diabetes <- predict(mod_dia,newdata=NuevoDiabetes2,type = "prob")
prediccion_diabetes
